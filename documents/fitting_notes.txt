The MulensModel package has no built-in function for fitting the models to the data.
This approach forces the user the chose the fitting algorithm,
the starting point or points, stopping criterion, and possibly other settings.
While this may be viewed as not a user-friendly approach,
we believe it is appropriate due to possible complications in model fitting.
These complications arise in
finding starting parameters for models with second-order effects,
continuous or discrete degeneracies that are intrinsic to microlensing,
problems with convergence, and
ensuring that the global minimum is found.
Below we present ideas for dealing with some of these issues.

The point-lens events are the simplest events to fit.
Model calculation is extremely fast, hence, one can run
a model-fitting routine on a grid of starting points in reasonable time.
The starting parameters can be relatively easily estimated:
$t_0$ as one of the brightest points in the time-series,
$u_0$ based on observed amplitude, and
$t_{\rm E}$ based on duration of the magnified part of the light curve.
\MM\, provides a function for calculating $\chi^2$ gradient for
point-source point-lens events (including parallax models),
which is used by some model-fitting algorithms.
In most cases, the parallax models can be found by starting from
parameters of static models.

Fitting binary lens models can be much more complicated
because in most cases the parameters cannot be estimated
based on light curve inspection.
One of the exceptions are binary lens events with planetary mass ratios
and the source approach to the planetary caustic (Gould 1992; Poleski et al. 2014a).
In most cases, planetary mass-ratio events show short-lasting anomalies and
binary lenses with mass ratios in $0.05-1$ range show long-lasting or multiple anomalies.
We note that rapid magnification changes are caused by caustic crossings or cusp approaches.
For binary lenses, caustics are non-intersecting curves, hence, caustic crossings must come in pairs.
MulensModel gives a number of built-in plotting functions that may be useful
for model fitting. 

There are multiple sets of parameters that can be used for model fitting
and the optimal choice depends on the specific event being considered.
In addition to $\rho \leftrightarrow t_{\star}$ reparametrization,
MulensModel allows use of the effective timescale ($t_{\rm eff} \equiv u_0t_{\rm E}$)
instead of either $u_0$ or $t_{\rm E}$.

